@page "/result"
@inject NavigationManager NavigationManager
@inject PassengerService passengerService;
@inject DestinationService destinationService;
@using DaveTrain.Data
@using FireSharp.Config;
@using FireSharp.Interfaces;
@using FireSharp.Response;

@inject DestinationService destinationService;

    <div class="container3">
        <h2 class="g17">Current Votes:</h2>
        <div class="g18">
            @foreach (var item in Passengers)
            {
                <h5>@item.Name: @item.VotedFor</h5>
            }
        </div>

        <h2 class="g20">Destination:</h2>
        @*<h2 class="g21">@AppData.Winner</h2>*@

        @*<button class="g22 b1 btn-warning" @onclick="OnRefresh">
            Referesh
        </button>*@

    </div>

@code {

    [Parameter]
    public List<PassengerModel> Passengers { get; set; }




    IFirebaseClient client;
    Dispatcher dd;

    private List<DestinationModel> _destinations;




    private Destination _destination = new Destination();

    private Destination _selectdDestination = new Destination();


    private void OnRefresh()
    {
        //  this.StateHasChanged();
        NavigationManager.NavigateTo("/");
        NavigationManager.NavigateTo("/result");


    }

    IFirebaseConfig config = new FirebaseConfig
    {
        AuthSecret = "II3bycCtijU0NplKxY7HoJ1e8YLtIY92PRYHdBRu",
        BasePath = "https://dazzling-torch-8270.firebaseio.com/"
    };

    protected override void OnInitialized()
    {


        // client = new FireSharp.FirebaseClient(config);

        // _destinations = new List<DestinationModel>();
        // _destinations = client.Get("DavesTrain/destinations/").ResultAs<List<DestinationModel>>();

        // //   PopulatePassengersAndDestinations();

        //// _passengers = passengerService.GetAllPassengers();

        // destinationService.DataUpdated += OnDataUpdated;
        // AppData.Winner = destinationService.GetWinner();
    }


    private void OnSubmit()
    {

        var ww = client.Get("DavesTrain/destinations/" + _selectdDestination.Id + "/vote");
        int jj = ww.ResultAs<int>();
        jj = jj + 1;
        client.Set("DavesTrain/destinations/" + _selectdDestination.Id + "/vote", jj);

        // _destinations = client.Get("DavesTrain/destinations/").ResultAs<List<DestinationModel>>();


        //  var f = fd.OrderByDescending(x=>x.vote);
        //var gg = fd.Max(x => x.vote);
        DestinationModel maxItem = _destinations.OrderByDescending(obj => obj.vote).First();

        AppData.Winner = destinationService.GetWinner(); //maxItem.name;

        NavigationManager.NavigateTo("/result");

    }

    private void OnDataUpdated(object sender,EventArgs e)
    {
        AppData.Winner = destinationService.GetWinner();

        //dd.InvokeAsync(new Action(()=> { this.StateHasChanged(); }));

        //base.InvokeAsync(StateHasChanged);
        // NavigationManager.NavigateTo("/");
        //   NavigationManager.NavigateTo("/result");

        destinationService.DataUpdated -= OnDataUpdated;
    }



   

    public class Passenger
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public class Destination
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }



}

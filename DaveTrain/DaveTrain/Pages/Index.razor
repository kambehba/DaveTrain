@page "/"
@using DaveTrain.Data
@inject DateClient DateClient
@inject NavigationManager NavigationManager
@inject PassengerService passengerService;
@inject DestinationService destinationService;

<div class="container">
    <h1 class="g0">Dave's Train</h1>
    <h1 class="g2">@currentWeekDay</h1>
    <h3 class="g3">@currentMonth</h3>

    <h3 class="g4">Select Your Name:</h3>
    <select class="g5" @bind="AppData.PassengerId">
        
        <option value=0>@string.Empty</option>

        @for (int i = 0; i < _passengers.Count; i++)
        {
            <option value="@_passengers[i].Id">@_passengers[i].Name</option>
        }
    </select>
    @*<div class="g4"><h2>Destanation:</h2> <h5 style="color:crimson">@Winner.Name</h5> </div>*@

    <button class="g6 btn-danger" @onclick="GoToDest">
        Start
    </button>

    <button class="g7 b1 btn-warning" @onclick="ResetAllVotes">
        Reset
    </button>


</div>

@code{


    private DateClient _dateClient;
    private string currentWeekDay;
    private string currentMonth;
    private List<PassengerModel> _passengers;
    private string selectedPassenger;
    protected override async Task OnInitializedAsync()
    {

        // result = await _dateClient.Client.GetStringAsync("http://worldclockapi.com/api/json/est/now");

    }




    protected override void OnInitialized()
    {

      


        //_dateClient = DateClient;

        //if (string.IsNullOrEmpty(Winner.Name)) Winner.Name = PassengerService.GetWinner();

        //var dateTime = DateTime.Now;
        //currentWeekDay = dateTime.DayOfWeek.ToString();
        //currentMonth = DateTime.Now.ToString("MMMM") + " " + DateTime.Now.ToString("dd") + ", " + DateTime.Now.ToString("yyyy");

        //NavigationManager.LocationChanged += OnLocationChanges;

        _dateClient = DateClient;
        _passengers = new List<PassengerModel>();
        _passengers = passengerService.GetAllPassengers();

        var dateTime = DateTime.Now;
        currentWeekDay = dateTime.DayOfWeek.ToString();
        currentMonth = DateTime.Now.ToString("MMMM") + " " + DateTime.Now.ToString("dd") + ", " + DateTime.Now.ToString("yyyy");

        NavigationManager.LocationChanged += OnLocationChanges;

        AppData.PassengerId = 0;

       

        

    }


    //protected override void OnInitialized()
    //{

    //    Task j = GetDateAsync();

    //}
    // string hh = "strff";


    //private async Task GetDateAsync()
    //{
    //    //var response = await Http.GetStringAsync("http://worldclockapi.com/api/json/est/now");
    //    //hh = response;

    //   // var hh = await Http.GetAsync("http://worldclockapi.com/api/json/est/now");
    //}



    //public static class ApiHelper
    //{
    //    public static HttpClient ApiClient { get; set; }

    //    public static void IntitializeClient()
    //    {
    //        ApiClient = new HttpClient();
    //        ApiClient.DefaultRequestHeaders.Accept.Clear();
    //        ApiClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
    //    }
    //}

    private string GetMonthByNumber(string n)
    {
        string month = string.Empty;

        return month;
    }

    private void GoToDest()
    {
        
        NavigationManager.NavigateTo("/destination");


    }

    private void ResetAllVotes()
    {
        destinationService.ResetAllVotes();


    }

   

    private void OnLocationChanges(object sender, LocationChangedEventArgs e)
    {
        var kk = AppData.Winner;

        StateHasChanged();
    }

  

    public class Passenger
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool Isvoted { get; set; }
        public DayOfWeek Day { get; set; }

    }


}





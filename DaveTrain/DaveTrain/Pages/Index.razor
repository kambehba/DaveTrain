@page "/"
@using DaveTrain.Data
@inject DateClient DateClient
@inject NavigationManager NavigationManager


<div class="container">
    <h1 class="g0">Dave's Train</h1>
    <h1 class="g2">@currentWeekDay</h1>
    <h3 class="g3">@currentMonth</h3>
    <div class="g4"><h2>Destanation:</h2> <h5 style="color:crimson">@Winner.Name</h5> </div>

    <button class="g5 btn-danger" @onclick="GoToDest">
        Where for Lunch ?
    </button>


</div>

@code{


    private DateClient _dateClient;
    private string currentWeekDay;
    private string currentMonth;
    // private string Winner;

    protected override async Task OnInitializedAsync()
    {

        // result = await _dateClient.Client.GetStringAsync("http://worldclockapi.com/api/json/est/now");

    }

   


    protected override void OnInitialized()
    {
        _dateClient = DateClient;

        if(string.IsNullOrEmpty(Winner.Name)) Winner.Name = "Pending...";

        var dateTime = DateTime.Now;
        currentWeekDay = dateTime.DayOfWeek.ToString();
        currentMonth = DateTime.Now.ToString("MMMM") + " " + DateTime.Now.ToString("dd") + ", " + DateTime.Now.ToString("yyyy");

        NavigationManager.LocationChanged += OnLocationChanges;

    }

  
    //protected override void OnInitialized()
    //{

    //    Task j = GetDateAsync();

    //}
    // string hh = "strff";


    //private async Task GetDateAsync()
    //{
    //    //var response = await Http.GetStringAsync("http://worldclockapi.com/api/json/est/now");
    //    //hh = response;

    //   // var hh = await Http.GetAsync("http://worldclockapi.com/api/json/est/now");
    //}



    //public static class ApiHelper
    //{
    //    public static HttpClient ApiClient { get; set; }

    //    public static void IntitializeClient()
    //    {
    //        ApiClient = new HttpClient();
    //        ApiClient.DefaultRequestHeaders.Accept.Clear();
    //        ApiClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
    //    }
    //}

    private string GetMonthByNumber(string n)
    {
        string month = string.Empty;

        return month;
    }

    private void GoToDest()
    {
        NavigationManager.NavigateTo("/destination");

      
    }

    private void ProcessVotes()
    {

    }

    private void OnLocationChanges(object sender,LocationChangedEventArgs e)
    {
        var kk = Winner.Name;

          StateHasChanged();
    }


}





@inject NavigationManager NavigationManager
@page "/destination"
@using DaveTrain.Data
@using FireSharp.Config;
@using FireSharp.Interfaces;
@using FireSharp.Response;

@inject DestinationService destinationService;
@inject PassengerService passengerService;

    <div class="container2">
        <h3 class="g12">Where to for Lunch ?</h3>
        <select class="g13" @bind="_selectdDestination">
            <option value=0>@string.Empty</option>

            @for (int i = 0; i < _destinations.Count; i++)
            {
                <option value="@_destinations[i].Id">@_destinations[i].name</option>
            }
        </select>

        <button class="g16 btn-danger" @onclick="OnSubmit">
            Submit
        </button>

    </div>

@code {

    IFirebaseClient client;


    private List<DestinationModel> _destinations;


    private Destination _destination = new Destination();

    private int _selectdDestination;


    IFirebaseConfig config = new FirebaseConfig
    {
        AuthSecret = "II3bycCtijU0NplKxY7HoJ1e8YLtIY92PRYHdBRu",
        BasePath = "https://dazzling-torch-8270.firebaseio.com/"
    };

    protected override void OnInitialized()
    {
        client = new FireSharp.FirebaseClient(config);

        _destinations = new List<DestinationModel>();
        _destinations = client.Get("DavesTrain/destinations/").ResultAs<List<DestinationModel>>();

        if(!string.IsNullOrEmpty(passengerService.PassengerHasVotedFor(AppData.PassengerId)))
        {
             NavigationManager.NavigateTo("/result");
        }

    }


    private void OnSubmit()
    {

        var ww = client.Get("DavesTrain/destinations/" + _selectdDestination.ToString()+ "/vote");
        int jj = ww.ResultAs<int>();
        jj = jj + 1;
        client.Set("DavesTrain/destinations/" + _selectdDestination + "/vote", jj);

        client.Set("DavesTrain/passengers/" + AppData.PassengerId + "/votefor", _selectdDestination);
        client.Set("DavesTrain/passengers/" + AppData.PassengerId + "/isvoted", true);

        //  client.Push("DavesTrain/destinations/" + _selectdDestination.Id + "/passengers", AppData.Passenger);

        passengerService.SetPassengerVote(AppData.PassengerId,destinationService.GetDestinationNameById(_selectdDestination));

        // _destinations = client.Get("DavesTrain/destinations/").ResultAs<List<DestinationModel>>();


        //  var f = fd.OrderByDescending(x=>x.vote);
        //var gg = fd.Max(x => x.vote);
        DestinationModel maxItem = _destinations.OrderByDescending(obj => obj.vote).First();

        AppData.Winner = destinationService.GetWinner(); //maxItem.name;

        NavigationManager.NavigateTo("/result");

    }


    public class Passenger
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public class Destination
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }



}
